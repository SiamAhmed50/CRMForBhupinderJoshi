@page
@model ClientTasksModel

@{
    ViewData["Title"] = "Clients";
}
 
    <div class="row">
        <div class="col-sm-6 text-start">
            <h2>Task</h2>
        </div>
        <div class="col-sm-6 text-end">
            <button type="button" class="btn btn-primary waves-effect waves-light" data-bs-toggle="modal" data-bs-target="#CreateTaskModal">
                Add Task
            </button>
        </div>
    </div>
    <div class="container mt-4">




        <table id="clientTaskTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    
                    <th>Client Name</th>
                    <th>Client ID</th>
                    <th>Task Name</th>
                    <th>Task Id</th>
                    
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    <div class="mt-3">
        <!-- Button trigger modal -->
        <!-- Modal -->
    <div class="modal fade" id="CreateTaskModal" tabindex="-1" aria-hidden="true" style="display: none;">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <form method="post">


                        <div class="modal-header">
                            <h4 class="modal-title" id="exampleModalLabel1">Task Details</h4>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                        <!-- Dropdown for Clients -->
                        <div class="mb-3">
                            <label for="clientId" class="form-label">Select Client</label>
                            <select class="form-select" id="clientId" name="ClientTaskModel.ClientId" required>
                                <option value="">Select Client</option>
                                @foreach (var client in Model.Clients)
                                {
                                    <option value="@client.Id">@client.Name</option>
                                }
                            </select>
                        </div>

                        <!-- Task Name Input and Dynamic Rows -->
                        <div id="createTaskRows" class="create-task-rows">
                            <div class="mb-3 create-task-row">
                                <label for="taskName" class="form-label">Task Name</label>
                                <input type="text" class="form-control" name="ClientTaskModel.Tasks[0].Name" required>
                            </div>
                        </div>

                        <!-- Add and Delete Buttons -->
                        <div class="text-end">
                            <button type="button" class="btn btn-success" onclick="addTaskRow()">Add</button>
                        </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-secondary waves-effect" data-bs-dismiss="modal">
                                Close
                            </button>
                            <button type="submit" class="btn btn-primary waves-effect waves-light">Save changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    <div class="modal fade" id="clientModalEdit" tabindex="-1" aria-hidden="true" style="display: none;">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form method="post" asp-page-handler="Update">

                    <input asp-for="ClientTaskModel.Id" type="hidden"/>
                    <div class="modal-header">
                        <h4 class="modal-title" id="exampleModalLabel1">Client Details</h4>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="clientId" class="form-label">Select Client</label>
                            <select class="form-select" id="clientId" name="ClientTaskModel.ClientId" required>
                                <option value="">Select Client</option>
                                @foreach (var client in Model.Clients)
                                {
                                    <option value="@client.Id">@client.Name</option>
                                }
                            </select>
                        </div>

                        <div id="editTaskRows" class="edit-task-rows">
                            
                        </div>

                        <!-- Add and Delete Buttons -->
                        <div class="text-end">
                            <button type="button" class="btn btn-success" onclick="addEditTaskRow()">Add</button>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary waves-effect" data-bs-dismiss="modal">
                            Close
                        </button>
                        <button type="submit" class="btn btn-primary waves-effect waves-light">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    </div>
 
@section Scripts {
    <script>
        var taskRowIndex = 0;

        function addTaskRow() {
            taskRowIndex++;

            var newRow = `
                            <div class="mb-3 create-task-row" id="createTaskRow${taskRowIndex}">
                                <label for="taskName" class="form-label">Task Name</label> <button type="button" class="btn btn-danger btn-sm ms-2 float-end mb-1" onclick="deleteCreateTaskRow(${taskRowIndex})">Delete</button>
                                        <input type="text" class="form-control" name="ClientTaskModel.Tasks[${taskRowIndex}].Name" required>
                         
                    </div>
                `;

            $("#createTaskRows").append(newRow);
        }

        function deleteCreateTaskRow(index) {
            
            $("#createTaskRow" + index).remove();
            var newIndex = 0;
            $('.create-task-row').each(function () {
                
                $(this).attr("id", "createTaskRow" + newIndex);
                $(this).attr('data-index', newIndex);
                $(this).find('input').attr('name', 'ClientTaskModel.Tasks[' + newIndex + '].Name');
                $(this).find('.delete-task').attr('data-index', newIndex);
                newIndex++;
            }); 
        }
    </script>
     <script>
        $(document).ready(function () {
            
            var table = $('#clientTaskTable').DataTable({
                "ajax": {
                    "type" : "POST",
                    "url": "/ClientTasks?handler=List",
                    "dataSrc": "",
                    "beforeSend": function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    }
                },
                "columns": [
                    { "data": "client.name", "title": "Client Name" },
                    { "data": "client.clientId", "title": "Client ID" },
                    {
                        "data": "tasks",
                        "title": "Task Name",
                        "render": function (data) {
                            var taskNames = data.map(task => task.name).join("<br>");
                            return taskNames;
                        }
                    },
                    {
                        "data": "tasks",
                        "title": "Task ID",
                        "render": function (data) {
                            var taskIds = data.map(task => task.taskId).join("<br>");
                            return taskIds;
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return '<div class="dropdown ms-auto" style="cursor:pointer;">' +
                                '<i class="fas fa-ellipsis-vertical" data-bs-toggle="dropdown" aria-expanded="false"></i>' +
                                '<ul class="dropdown-menu">' +
                                '<li>' +
                                '<span class="dropdown-item edit-task" style="cursor:pointer;">' +
                                '<i class="fas fa-pen mx-2"></i> Update' +
                                '</span>' +
                                '</li>' +
                                '<li>' +
                                '<span class="dropdown-item delete-task" style="cursor:pointer;">' +
                                '<i class="fas fa-trash mx-2"></i> Delete' +
                                '</span>' +
                                '</li>' +
                                '</ul>' +
                                '</div>';
                        } 
                    }
                ],
                 
            });


            // Edit button click event handler for ClientTasks
            $('#clientTaskTable tbody').on('click', 'span.edit-task', function () {
                
                var row = $(this).closest('tr');
                var data = table.row(row).data();

                // Populate the edit modal form with the fetched data
                $('#clientModalEdit #ClientTaskModel_Id').val(data.id);

                // Set the selected client in the dropdown
                $('#clientModalEdit #clientId').val(data.clientId); 

                // Add task rows based on the tasks in the data
                data.tasks.forEach(function (task, index) {
                    
                    addTaskRowEdit(task, index);
                });

                // Show the edit modal
                $('#clientModalEdit').modal('show');
            });

            // Function to add task row in edit modal
            function addTaskRowEdit(task, index) {
                
                var deleteButton = index > 0 ? '<button type="button" class="btn btn-danger btn-sm ms-2 float-end mb-1" onclick="deleteEditTaskRow(' + index + ')">Delete</button>' : '';

                var newRow = `
                <div class="mb-3 edit-task-row" id="editTaskRow${index}">
                                    <label for="taskName" class="form-label">Task Name</label> ${deleteButton}
                    <input type="text" class="form-control" name="ClientTaskModel.Tasks[${index}].Name" value="${task.name}" required>
                </div>
            `;

                $("#clientModalEdit #editTaskRows").append(newRow);
            }

            $('#clientTaskTable tbody').on('click', 'span.delete-task', function () {
                
                var row = $(this).closest('tr');
                var id = table.row(row).data().id;
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: `/ClientTasks?handler=Delete&id=${id}`, // Adjust the URL based on your endpoint
                            type: 'POST',
                            beforeSend: function (xhr) {
                                // Set the XSRF token
                                xhr.setRequestHeader('XSRF-TOKEN', $('input:hidden[name="__RequestVerificationToken"]').val());
                            },
                            success: function (response) {
                                // Handle success, e.g., show a success message
                                table.ajax.reload();
                                Swal.fire({
                                    title: 'Deleted!',
                                    text: 'The Task has been deleted.',
                                    icon: 'success'
                                });
                            },
                            error: function (error) {
                                // Handle error, e.g., show an error message
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'An error occurred while deleting the task.',
                                    icon: 'error'
                                });
                            }
                        });
                    }
                });
            });
        }); 
        function addEditTaskRow() {
            debugger;
            taskEditRowIndex = $("#clientModalEdit .edit-task-row").length;

            var newRow = `<div class="mb-3 edit-task-row" id="editTaskRow${taskEditRowIndex}">
                                                <label for="taskName" class="form-label">Task Name</label> <button type="button" class="btn btn-danger btn-sm ms-2 float-end mb-1" onclick="deleteEditTaskRow(${taskEditRowIndex})">Delete</button>
                                                        <input type="text" class="form-control" name="ClientTaskModel.Tasks[${taskEditRowIndex}].Name" required>

                            </div>
                        `;

            $("#editTaskRows").append(newRow);
        }
        function deleteEditTaskRow(index) {
            
            $("#editTaskRow" + index).remove();
            var newIndex = 0;
            $('#clientModalEdit .edit-task-row').each(function () {
                
                $(this).attr("id", "editTaskRow" + newIndex);
                $(this).attr('data-index', newIndex);
                $(this).find('input').attr('name', 'ClientTaskModel.Tasks[' + newIndex + '].Name');
                $(this).find('.delete-task').attr('data-index', newIndex);
                newIndex++;
            });
        }


       
    </script>  
}
