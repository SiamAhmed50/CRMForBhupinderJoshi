@page
@model CRM.UI.Pages.UsersModel
@{
    ViewData["Title"] = "Users";
}

<div class="row">
    <div class="col-sm-6 text-start">
        <h2>Users</h2>
    </div>
    <div class="col-sm-6 text-end">
        <button type="button" class="btn btn-primary waves-effect waves-light" data-bs-toggle="modal" data-bs-target="#userModal">
            Add User
        </button>
    </div>
</div>

<div class="container mt-4">
    <table id="userTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Email</th>
                <th>Username</th>
                <th>Role</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<!-- Modal for adding users -->
<div class="modal fade" id="userModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post">
                <div class="modal-header">
                    <h4 class="modal-title">User Details</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">

                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" asp-for="UserModel.Email" class="form-control" placeholder="Enter Email">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input type="text" asp-for="UserModel.UserName" class="form-control" placeholder="Enter Username">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" asp-for="UserModel.Password" class="form-control" placeholder="Enter Password">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Role</label>
                        <select asp-for="UserModel.Role" class="form-select">
                            <option value="Admin">Admin</option>
                            <option value="Customer">Customer</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Modal for update users -->
<div class="modal fade" id="userModalEdit" tabindex="-1" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="Update">
                <input asp-for="UserModel.Id" type="hidden" />
                <div class="modal-header">
                    <h4 class="modal-title">Edit User</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="mb-2">
                        <label for="emailBasic" class="form-label">Email</label>
                        <input type="text" asp-for="UserModel.Email" class="form-control" placeholder="Enter Client ID" readonly>
                    </div>
                    <div class="mb-2">
                        <label for="UserNameBasic" class="form-label">User Name</label>
                        <input type="text" asp-for="UserModel.UserName" class="form-control" placeholder="Enter License Number" readonly>
                    </div>
                    <div class="mb-2">
                        <label for="RoleBasic" class="form-label">Role</label>
                        <select class="form-control" name="UserModel.Role" required>
                            <option value="Admin">Admin</option>
                            <option value="Customer">Customer</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary waves-effect" data-bs-dismiss="modal"> Close</button>
                    <button type="submit" class="btn btn-primary waves-effect waves-light">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            var table = $('#userTable').DataTable({
                "ajax": {
                    "type": "POST",
                    "url": "/Users?handler=List",
                    "dataSrc": "",
                    "beforeSend": function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                    }
                },
                "columns": [
                    { "data": "email" },
                    { "data": "userName" },
                    { "data": "role" },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return '<div class="dropdown ms-auto" style="cursor:pointer;">' +
                                '<i class="fas fa-ellipsis-vertical" data-bs-toggle="dropdown"></i>' +
                                '<ul class="dropdown-menu">' +
                                '<li><span class="dropdown-item edit-user" data-id="' + row.id + '"><i class="fas fa-pen mx-2"></i> Update</span></li>' +
                                '<li><span class="dropdown-item delete-user" data-id="' + row.id + '"><i class="fas fa-trash mx-2"></i> Delete</span></li>' +
                                '</ul>' +
                                '</div>';
                        }
                    }
                ]


            });


            // Delete button click event handler
            $('#userTable tbody').on('click', 'span.delete-user', function () {
                var id = $(this).data('id');
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: `/Users?handler=Delete`,
                            type: 'POST',
                            data: { id: id }, // Pass id in the data parameter
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader('XSRF-TOKEN', $('input:hidden[name="__RequestVerificationToken"]').val());
                            },
                            success: function (response) {
                                if (response.success) {
                                    table.ajax.reload(); // Reload the table data
                                    Swal.fire({
                                        title: 'Deleted!',
                                        text: response.message, // Display server-side message
                                        icon: 'success'
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Error!',
                                        text: response.message || 'Failed to delete user.',
                                        icon: 'error'
                                    });
                                }
                            },
                            error: function (error) {
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'An error occurred while deleting the user.',
                                    icon: 'error'
                                });
                            }
                        });
                    }
                });
            });


            // Edit button click event
            $('#userTable tbody').on('click', 'span.edit-user', function () {
                var id = $(this).data('id');
                $.ajax({
                    url: `/Users?handler=User&id=${id}`,
                    type: 'GET',
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#userModalEdit input[name="UserModel.Id"]').val(response.data.id);
                            $('#userModalEdit input[name="UserModel.Email"]').val(response.data.email);
                            $('#userModalEdit input[name="UserModel.UserName"]').val(response.data.userName);
                            if (response.data.role !== undefined) {
                                $('#userModalEdit select[name="UserModel.Role"]').val(response.data.role).prop("selected", true);
                            }

                            $('#userModalEdit').modal('show');
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Failed to fetch user details.',
                                icon: 'error'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while fetching user details.',
                            icon: 'error'
                        });
                    }
                });
            });

        

        });
    </script>
}