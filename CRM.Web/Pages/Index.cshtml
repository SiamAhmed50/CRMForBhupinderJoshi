@page
@model CRM.Web.Pages.IndexModel
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Mvc.Rendering
@{
    ViewData["Title"] = "Dashboard";
}

<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">

        <h3 class="text-center mb-4">Dashboard</h3>

        <!-- Filters -->
        <form method="get" class="row g-3 mb-4">
            <div class="col-md-3">
                <label asp-for="SelectedClient" class="form-label">Client</label>
                <select asp-for="SelectedClient"
                        class="form-select"
                        asp-items="@(new SelectList(Model.Clients, "Id", "Name"))">
                </select>
            </div>
            <div class="col-md-3">
                <label asp-for="StartDate" class="form-label">Start Date</label>
                <input asp-for="StartDate" type="date" class="form-control" />
            </div>
            <div class="col-md-3">
                <label asp-for="EndDate" class="form-label">End Date</label>
                <input asp-for="EndDate" type="date" class="form-control" />
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-primary w-100">
                    Filter
                </button>
            </div>
        </form>

        <!-- Summary Cards -->
        <div class="row mb-4 align-items-stretch">
            <div class="col-md-6 d-flex mb-4">
                <div class="card flex-fill">
                    <div class="card-body d-flex flex-column justify-content-center">
                        <h5 class="card-title">Jobs</h5>
                        <p class="card-text mb-0">
                            Processed: @Model.Summary.processed<br />
                            In-Progress: @Model.Summary.inProgress
                        </p>
                    </div>
                </div>
            </div>

            <div class="col-md-6 d-flex mb-4">
                <div class="card flex-fill">
                    <div class="card-body d-flex flex-column justify-content-center">
                        <h5 class="card-title">Transactions</h5>
                        <p class="card-text mb-0">
                            Total: @Model.Summary.totalTx<br />
                            Success: @Model.Summary.successfulTx<br />
                            Business Exception: @Model.Summary.businessException<br />
                            System Exception: @Model.Summary.systemException
                        </p>
                    </div>
                </div>
            </div>
        </div>


        <!-- Charts -->
        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header">
                        <div class="d-flex justify-content-between">
                            <h4 class="mt-1">Jobs Over Time</h4>
                            <!-- inside your existing chart cards, next to the CSV export buttons add: -->
                            <a asp-page-handler="ExportJobs"
                               asp-route-SelectedClient="@Model.SelectedClient"
                               asp-route-StartDate="@Model.StartDate:yyyy-MM-dd"
                               asp-route-EndDate="@Model.EndDate:yyyy-MM-dd"
                               class="btn btn-outline-primary">
                                Export Jobs
                            </a>
                        </div>
                    </div>
                 

                    <div class="card-body">
                        <canvas id="jobsChart"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-md-6 mb-4">
                <div class="card">
                    
                        <div class="card-header">
                        <div class="d-flex justify-content-between">
                            <h4 class="mt-1">Transactions Over Time</h4>

                            <a asp-page-handler="ExportTransactions"
                               asp-route-SelectedClient="@Model.SelectedClient"
                               asp-route-StartDate="@Model.StartDate:yyyy-MM-dd"
                               asp-route-EndDate="@Model.EndDate:yyyy-MM-dd"
                               class="btn btn-outline-primary">
                                Export Transactions
                            </a>

                        </div>
                        </div>

                    <div class="card-body">
                        <canvas id="transactionsChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Deserialize the pre-fetched series data
    var jobsSeries = @Html.Raw(JsonConvert.SerializeObject(Model.JobsSeries));
    var txSeries = @Html.Raw(JsonConvert.SerializeObject(Model.TransactionsSeries));

    // Prepare datasets
    var jobLabels = jobsSeries.map(pt => pt.date);
    var jobData = jobsSeries.map(pt => pt.count);

    var txLabels = txSeries.map(pt => pt.date);
    var txData = txSeries.map(pt => pt.count);

    // Render Jobs chart
    var ctxJobs = document.getElementById('jobsChart').getContext('2d');
    new Chart(ctxJobs, {
        type: 'line',
        data: {
            labels: jobLabels,
            datasets: [{
                label: 'Jobs',
                data: jobData,
                fill: false
            }]
        },
        options: {
            scales: {
                x: { title: { display: true, text: 'Date' } },
                y: { title: { display: true, text: 'Count' } }
            }
        }
    });

    // Render Transactions chart
    var ctxTx = document.getElementById('transactionsChart').getContext('2d');
    new Chart(ctxTx, {
        type: 'line',
        data: {
            labels: txLabels,
            datasets: [{
                label: 'Transactions',
                data: txData,
                fill: false
            }]
        },
        options: {
            scales: {
                x: { title: { display: true, text: 'Date' } },
                y: { title: { display: true, text: 'Count' } }
            }
        }
    });
</script>
 